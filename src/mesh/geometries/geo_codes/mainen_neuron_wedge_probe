probe_dz = Abs(probe_width/2/Tan(alpha/2));

// FIXME: based onbbox
probe_top = 4;
// 1   5
// 2   4
//   3
//
p = newp;
points[] = {-1, p, p+1, p+2, p+3, p+4, p+5};
Point(points[1]) = {probe_x-probe_thick/2, probe_y-probe_width/2, probe_top};
Point(points[2]) = {probe_x-probe_thick/2, probe_y-probe_width/2, probe_z + probe_dz};
Point(points[3]) = {probe_x-probe_thick/2, probe_y, probe_z};
Point(points[4]) = {probe_x-probe_thick/2, probe_y+probe_width/2, probe_z + probe_dz};
Point(points[5]) = {probe_x-probe_thick/2, probe_y+probe_width/2, probe_top};

l = newl;
lines[] = {-1, l, l+1, l+2, l+3, l+4, l+5, l+6};
Line(lines[1]) = {points[1], points[2]};
Line(lines[2]) = {points[2], points[3]};
Line(lines[3]) = {points[3], points[4]};
Line(lines[4]) = {points[4], points[5]};
Line(lines[5]) = {points[5], points[1]};
Line(lines[6]) = {points[2], points[4]};

loop_sq = newll;
Line Loop(loop_sq) = {lines[4], lines[5], lines[1], lines[6]};

probe_square_surface = news; 
Plane Surface(probe_square_surface) = {loop_sq};

loop_tip = newll;
Line Loop(loop_tip) = {lines[3], -lines[6], lines[2]};

probe_tip_surface = news;
Plane Surface(probe_tip_surface) = {loop_tip};

extr_tip[] = Extrude {probe_thick, 0, 0} {Surface{probe_tip_surface};};
extr_sq[] = Extrude {probe_thick, 0, 0} {Surface{probe_square_surface};};

probe_free() = BooleanUnion {Volume{extr_tip[1]}; Delete;} {Volume{extr_sq[1]}; Delete;};

// Fancy
ncontacts = #contact_loc_z[];

//foo[] = {};
If(ncontacts > 0)
  For i In {0:(ncontacts-1)}
    v = newv;
    Cylinder(v) = {probe_x-probe_thick/2, contact_loc_y[i], contact_loc_z[i],
                   probe_thick, 0, 0, contact_rad};
    //aux() = Boundary{ Volume{v}; };
    //foo[] += aux[];

    probe_contacts[i] = v;
  EndFor

  bbox_probe() = BooleanDifference {Volume{bbox}; Delete;}{Volume{probe_free, probe_contacts[]}; Delete;};
  outside() = BooleanDifference { Volume{bbox_probe}; Delete; }{ Volume{neuron};};
  Physical Volume(2) = {outside[]};  

  outside_surface() = Boundary{ Volume{outside()}; };
  //nsurfs = #outside_surface[];

  //max_s = 0;
  //For i In {0:nsurfs-1}
  //  If(outside_surface[i] > max_s)
  //    max_s = outside_surface[i];
  //  EndIf
  //EndFor

  Physical Surface(5) = {8, 9, 11, 12, 13};
  Physical Surface(6) = {10};

  probe_surface[] = outside_surface[];
  probe_surface[] -= {8, 9, 10, 11, 12, 13};  // outer
  probe_surface[] -= {1, 2, 3, 4, 5, 6, 7};       // neuron surfaces
  Physical Surface(4) = {probe_surface[]};
Else
  bbox_probe() = BooleanDifference {Volume{bbox}; Delete;}{Volume{probe_free}; Delete;};

  outside() = BooleanDifference { Volume{bbox_probe}; Delete; }{ Volume{neuron};};
  // Physical
  Physical Volume(2) = {outside[]};  

  // Probe surfaces, no contact surface so no 41
  probe_surface[] = {14:20};
  Physical Surface(4) = {probe_surface[]};

  // Boundaries is of the 2 volume
  Physical Surface(5) = {8, 9, 11, 12, 13};
  Physical Surface(6) = {10};
EndIf

